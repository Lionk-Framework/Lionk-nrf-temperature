#include <stdbool.h>
#include <zephyr/bluetooth/uuid.h>

#ifndef BLE_H

#define BLE_H

#define BT_UUID_TEMPERATURE_SVC_VAL \
	BT_UUID_128_ENCODE(0x00000001, 0x7669, 0x6163, 0x616d, 0x2d63616c6563)

#define BT_UUID_BATTERY_SVC_VAL \
	BT_UUID_128_ENCODE(0x00000003, 0x7669, 0x6163, 0x616d, 0x2d63616c6563)

#define BT_UUID_BATTERY_VAL \
	BT_UUID_128_ENCODE(0x00000005, 0x7669, 0x6163, 0x616d, 0x2d63616c6563)

#define BT_UUID_VERSION_SVC_VAL \
	BT_UUID_128_ENCODE(0x00000005, 0x7669, 0x6163, 0x616d, 0x2d63616c6563)

#define BT_UUID_VERSION_VAL \
	BT_UUID_128_ENCODE(0x00000006, 0x7669, 0x6163, 0x616d, 0x2d63616c6563)

#define BT_UUID_DATA_SVC_VAL \
	BT_UUID_128_ENCODE(0x00000007, 0x7669, 0x6163, 0x616d, 0x2d63616c6563)

#define BT_UUID_DATA_VAL \
	BT_UUID_128_ENCODE(0x00000008, 0x7669, 0x6163, 0x616d, 0x2d63616c6563)

#define BT_UUID_DATA_CCC_VAL \
	BT_UUID_128_ENCODE(0x00000009, 0x7669, 0x6163, 0x616d, 0x2d63616c6563)

#define BT_UUID_BATTERY_SVC	BT_UUID_DECLARE_128(BT_UUID_BATTERY_SVC_VAL)
#define BT_UUID_BATTERY		BT_UUID_DECLARE_128(BT_UUID_BATTERY_VAL)
#define BT_UUID_TEMPERATURE_SVC BT_UUID_DECLARE_128(BT_UUID_TEMPERATURE_SVC_VAL)
#define BT_UUID_DATA_SVC	BT_UUID_DECLARE_128(BT_UUID_DATA_SVC_VAL)
#define BT_UUID_DATA		BT_UUID_DECLARE_128(BT_UUID_DATA_VAL)
#define BT_UUID_DATA_CCC	BT_UUID_DECLARE_128(BT_UUID_DATA_CCC_VAL)
#define BT_UUID_VERSION_SVC	BT_UUID_DECLARE_128(BT_UUID_VERSION_SVC_VAL)
#define BT_UUID_VERSION		BT_UUID_DECLARE_128(BT_UUID_VERSION_VAL)

void ble_setup(void);
int ble_start_advertising(void);
int ble_stop_advertising(void);
int ble_send_data(void);
bool ble_is_connected(void);
bool ble_is_subscribed(void);
#endif
